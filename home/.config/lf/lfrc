set ratios 1:2:3
set cleaner ~/.config/lf/cleaner
set previewer ~/.config/lf/preview
# interpreter for shell commands
set shell sh

# set '-eu' options for shell commands
# These options are used to have safer shell commands. Option '-e' is used to
# exit on error and option '-u' is used to give error for unset variables.
# Option '-f' disables pathname expansion which can be useful when $f, $fs, and
# $fx variables contain names with '*' or '?' characters. However, this option
# is used selectively within individual commands as it can be limiting at
# times.
set shellopts '-eu'

# set internal field separator (IFS) to "\n" for shell commands
# This is useful to automatically split file names in $fs and $fx properly
# since default file separator used in these variables (i.e. 'filesep' option)
# is newline. You need to consider the values of these options and create your
# commands accordingly.
set ifs "\n"

# leave some space at the top and the bottom of the screen
set scrolloff 10

# use enter for shell commands
map <enter> shell

# execute current file (must be executable)
map é $$f
map É !$f

# dedicated keys for file opener actions
map L $mimeopen --ask $f

# define a custom 'open' command
# This command is called when current file is not a directory. You may want to
# use either file extensions and/or mime types here. Below uses an editor for
# text files and a file opener for the rest.
cmd open ${{
  test -L $f && f=$(readlink -f $f)
  case $(file --mime-type $f -b) in
    text/*) $EDITOR $fx;;
    *) for f in $fx; do setsid $OPENER $f > /dev/null 2> /dev/null & done;;
  esac
}}

cmd delete ${{
  set -f
  printf "$fx\n"
  printf "delete?[y/n]"
  read ans
  [ "$ans" = "y" ] && rm -rf $fx
}}
map <delete> delete
map d push $trash<space>$fx<enter>

cmd extract ${{
  set -f
  case $f in
    *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
    *.tar.gz|*.tgz) tar xzvf $f;;
    *.tar.xz|*.txz) tar xJvf $f;;
    *.zip) unzip $f;;
    *.rar) unrar x $f;;
    *.7z) 7z x $f;;
  esac
}}
map x push :extract<enter>

cmd tar ${{
  set -f
  mkdir $1
  cp -r $fx $1
  tar czf $1.tar.gz $1
  rm -rf $1
}}
map c push :tar<space>

cmd zip ${{
  set -f
  mkdir $1
  cp -r $fx $1
  zip -r $1.zip $1
  rm -rf $1
}}
map C push :zip<space>

cmd dragon-drop ${{
  set -f
  dragon-drop $fx --and-exit --all
}}
map ő push :dragon-drop<enter>

map a push $touch<space>
map A push $mkdir<space>

map J push jjjjj
map K push kkkkkk

map e push /
map w push $nvim<space>$fx<enter>
map t push $st<space>-e<space>fish&<enter>

set hidden!
set drawbox
