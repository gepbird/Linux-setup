local tree = require 'nvim-tree'

tree.setup {
  auto_reload_on_write = true,
  create_in_closed_folder = false,
  disable_netrw = false,
  hijack_cursor = true,
  hijack_netrw = true,
  hijack_unnamed_buffer_when_opening = false,
  ignore_buffer_on_setup = false,
  open_on_setup = false,
  open_on_setup_file = false,
  open_on_tab = false,
  ignore_buf_on_tab_change = {},
  sort_by = 'name',
  root_dirs = {},
  prefer_startup_root = false,
  sync_root_with_cwd = true,
  reload_on_bufenter = false,
  respect_buf_cwd = true,
  view = {
    adaptive_size = false,
    centralize_selection = false,
    width = 30,
    height = 30,
    hide_root_folder = false,
    side = 'left',
    preserve_window_proportions = false,
    number = false,
    relativenumber = false,
    signcolumn = 'yes',
    mappings = {
      custom_only = true,
      list = {
        { key = '<c-e>', action = 'edit_in_place' },
        { key = '<s-o>', action = 'edit_no_picker' },
        { key = 'c', action = 'cd' },
        { key = '<c-v>', action = 'vsplit' },
        { key = '<c-x>', action = 'split' },
        { key = '<c-t>', action = 'tabnew' },
        { key = '<c-k>', action = 'prev_sibling' },
        { key = '<c-j>', action = 'next_sibling' },
        { key = 'P', action = 'parent_node' },
        { key = 'h', action = 'close_node' },
        { key = 'l', action = 'open_node' }, -- and edit
        { key = '<s-h>', action = 'collapse_all' },
        { key = '<s-l>', action = 'expand_all' },
        { key = '<tab>', action = 'preview' },
        { key = '<s-i>', action = 'toggle_git_ignored' },
        { key = '<s-d>', action = 'toggle_dotfiles' },
        { key = '<s-u>', action = 'toggle_custom' },
        { key = '<s-r>', action = 'refresh' },
        { key = 'a', action = 'create' },
        { key = '<s-d>', action = 'remove' },
        { key = 'd', action = 'trash' },
        { key = '<c-r>', action = 'rename' },
        { key = 'r', action = 'full_rename' },
        { key = 'x', action = 'cut' },
        { key = 'y', action = 'copy' },
        { key = 'p', action = 'paste' },
        { key = '<c-y>', action = 'copy_name' },
        { key = '<s-y>', action = 'copy_path' },
        { key = 'gy', action = 'copy_absolute_path' },
        { key = '[e', action = 'prev_diag_item' },
        { key = '[c', action = 'prev_git_item' },
        { key = ']e', action = 'next_diag_item' },
        { key = ']c', action = 'next_git_item' },
        { key = '-', action = 'dir_up' },
        { key = 's', action = 'system_open' },
        { key = 'f', action = 'live_filter' },
        { key = 'F', action = 'clear_live_filter' },
        { key = 'q', action = 'close' },
        { key = '<s-s>', action = 'search_node' },
        { key = '.', action = 'run_file_command' },
        { key = '<space>k', action = 'toggle_file_info' },
        { key = 'g?', action = 'toggle_help' },
        { key = 'm', action = 'toggle_mark' },
        { key = 'bmv', action = 'bulk_move' },
      },
    },
  },
  renderer = {
    add_trailing = false,
    group_empty = false,
    highlight_git = false,
    full_name = false,
    highlight_opened_files = 'none',
    root_folder_modifier = ':~',
    indent_markers = {
      enable = true,
      icons = {
        corner = '└',
        edge = '│',
        item = '│',
        none = ' ',
      },
    },
    icons = {
      webdev_colors = true,
      git_placement = 'before',
      padding = ' ',
      symlink_arrow = ' ➛ ',
      show = {
        file = true,
        folder = true,
        folder_arrow = true,
        git = true,
      },
      glyphs = {
        default = '',
        symlink = '',
        bookmark = '',
        folder = {
          arrow_closed = '',
          arrow_open = '',
          default = '',
          open = '',
          empty = '',
          empty_open = '',
          symlink = '',
          symlink_open = '',
        },
        git = {
          unstaged = 'M',
          staged = 'S',
          unmerged = '',
          renamed = 'R',
          deleted = '',
          untracked = 'U',
          ignored = '◌',
        },
      },
    },
    special_files = { 'Cargo.toml', 'Makefile', 'README.md', 'readme.md' },
    symlink_destination = true,
  },
  hijack_directories = {
    enable = true,
    auto_open = true,
  },
  update_focused_file = {
    enable = true,
    update_root = true,
    ignore_list = {},
  },
  ignore_ft_on_setup = {},
  system_open = {
    cmd = '',
    args = {},
  },
  diagnostics = {
    enable = true,
    show_on_dirs = true,
    debounce_delay = 50,
    icons = {
      hint = '',
      info = '',
      warning = '',
      error = '',
    },
  },
  filters = {
    dotfiles = false,
    custom = { '\\.git$' },
    exclude = {},
  },
  filesystem_watchers = {
    enable = true,
    debounce_delay = 50,
  },
  git = {
    enable = true,
    ignore = true,
    show_on_dirs = true,
    timeout = 400,
  },
  actions = {
    use_system_clipboard = true,
    change_dir = {
      enable = true,
      global = false,
      restrict_above_cwd = false,
    },
    expand_all = {
      max_folder_discovery = 300,
      exclude = {},
    },
    open_file = {
      quit_on_open = false,
      resize_window = true,
      window_picker = {
        enable = true,
        chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890',
        exclude = {
          filetype = { 'notify', 'packer', 'qf', 'diff', 'fugitive', 'fugitiveblame' },
          buftype = { 'nofile', 'terminal', 'help' },
        },
      },
    },
    remove_file = {
      close_window = true,
    },
  },
  trash = {
    cmd = 'gio trash',
    require_confirm = false,
  },
  live_filter = {
    prefix = '[FILTER]: ',
    always_show_folders = true,
  },
  log = {
    enable = false,
    truncate = false,
    types = {
      all = false,
      config = false,
      copy_paste = false,
      dev = false,
      diagnostics = false,
      git = false,
      profile = false,
      watcher = false,
    },
  },
}

require 'user.utils'.register_maps {
  { 'n', '<space>e', tree.toggle },
}
